#!/usr/bin/env bash

set -eu

# function for trimming and merging
pair_trim_merge () {
    local _outdir
    local _r1_file
    local _r2_file
    local _cmd1
    local _cmd2
    local _bn
    local _bn2
    local _bbduk_err
    local _bbmerge_err
    
    _r1_file="${1}"
    _outdir="${2}"

    _r2_file="${_r1_file/_R1_/_R2_}"

    printf "_r1_file:\t%s\n" "${_r1_file}"
    printf "_r2_file:\t%s\n" "${_r2_file}"

    # make sure R2 exists
    if [[ ! -e "${_r2_file}" ]]; then
        printf "%s not found; exit\n" "${_r2_file}"
        exit 1
    fi

    # output basename
    _bn2=$(basename "${_r1_file%%_R1_*}")
    _bn="${_bn2#D2JR8-}"
    printf "basename:\t%s\n" "${_bn}"

    # bbduk
    _cmd1=( bin/bbmap/bbduk.sh
               "in1=${_r1_file}"
               "in2=${_r2_file}"
               out=stdout.fq
               ktrim=l rcomp=t
               k=20 hdist=2
               mink=10 hdist2=2
               ref="data/project_files/rbcl_primers.fa" )

    # bbmerge
    _cmd2=( bin/bbmap/bbmerge.sh 
               in=stdin.fq
               "out=${_outdir}/${_bn}_merged.fastq.gz"
               "outu=${_outdir}/${_bn}_unmerged_R1.fastq.gz"
               "outu2=${_outdir}/${_bn}_unmerged_R2.fastq.gz"
               ziplevel=9
               adapter="data/project_files/rbcl_primers.fa" )

    # run pipe
    _bbduk_err="${_outdir}/${_bn}_bbduk.log"
    _bbmerge_err="${_outdir}/${_bn}_bbmerge.log"
    "${_cmd1[@]}" 2> "${_bbduk_err}" \
        | "${_cmd2[@]}" 2> "${_bbmerge_err}"
}

export -f pair_trim_merge

# setup outdir
outdir="output/trim_merge"
if [[ ! -e "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi

find "data/NZGL02556/" -name "*_R1_*.fastq.gz" \
    -exec bash -c 'pair_trim_merge "${0}" "${1}"' {} "${outdir}" \;
